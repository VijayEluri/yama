<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:sc="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<sc:http pattern="/" security="none" />
	<sc:http pattern="/*.html" security="none" />
	<sc:http pattern="/html/**" security="none" />
	<sc:http pattern="/scripts/**" security="none" />
	<sc:http pattern="/styles/**" security="none" />
	<sc:http pattern="/images/**" security="none" />
	<sc:http pattern="/bower_components/**" security="none" />
	
	<sc:http create-session="never" entry-point-ref="oauthAuthenticationEntryPoint" 
		access-decision-manager-ref="accessDecisionManager" use-expressions="true">
		<sc:intercept-url pattern="/a/**" method="GET" access="#oauth2.hasScope('READ') and isFullyAuthenticated()" />
		<sc:intercept-url pattern="/a/**" method="HEAD" access="#oauth2.hasScope('READ') and isFullyAuthenticated()" />
		<sc:intercept-url pattern="/a/**" method="POST" access="#oauth2.hasScope('WRITE') and isFullyAuthenticated()" />
		<sc:intercept-url pattern="/a/**" method="PUT" access="#oauth2.hasScope('WRITE') and isFullyAuthenticated()" />
		<sc:intercept-url pattern="/a/**" method="DELETE" access="#oauth2.hasScope('WRITE') and isFullyAuthenticated()" />
		<sc:intercept-url pattern="/a/**" method="PATCH" access="#oauth2.hasScope('WRITE') and isFullyAuthenticated()" />
		
		<sc:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<sc:access-denied-handler ref="oauthAccessDeniedHandler" />
	</sc:http>
	
	<bean id="oauthAuthenticationEntryPoint" 
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint" />
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
	
	<oauth2:resource-server id="resourceServerFilter" token-services-ref="tokenServices" />
	
	<bean id="oauthAccessDeniedHandler" 
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />
</beans>